version: '3.8'

# Verbumcare Nagare (流れ) - Japan Edge Server
# Offline-first healthcare documentation with local AI
# SSL-secured LAN communication

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: nagare-postgres
    environment:
      POSTGRES_DB: nagare_db
      POSTGRES_USER: nagare
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-nagare_secure_password_change_me}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/db/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
      - ./backend/src/db/seed.sql:/docker-entrypoint-initdb.d/2-seed.sql
    networks:
      - nagare-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nagare -d nagare_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nagare-backend
    environment:
      # Database (internal Docker network)
      DATABASE_URL: postgres://nagare:${POSTGRES_PASSWORD:-nagare_secure_password_change_me}@postgres:5432/nagare_db

      # Server configuration
      PORT: 3000
      NODE_ENV: ${NODE_ENV:-production}

      # CORS - SSL subdomains only
      CLIENT_URLS: https://admin.nagare.local,https://api.nagare.local

      # AI Services - Running on Ubuntu host (bare metal)
      WHISPER_URL: http://host.docker.internal:8080
      WHISPER_MODEL: ${WHISPER_MODEL:-large-v3}
      WHISPER_LANGUAGE: ja

      OLLAMA_URL: http://host.docker.internal:11434
      OLLAMA_MODEL: ${OLLAMA_MODEL:-llama3:8b}
      OLLAMA_NUM_CTX: ${OLLAMA_NUM_CTX:-2048}
      OLLAMA_NUM_THREAD: ${OLLAMA_NUM_THREAD:-8}
      OLLAMA_TEMPERATURE: ${OLLAMA_TEMPERATURE:-0.1}

      # Nagare Edge specific
      EDGE_SERVER_NAME: ${EDGE_SERVER_NAME:-Nagare Demo}
      CLOUD_SYNC_ENABLED: ${CLOUD_SYNC_ENABLED:-false}
      CLOUD_SYNC_URL: ${CLOUD_SYNC_URL:-https://nagare.verbumcare.com}

    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs

    depends_on:
      postgres:
        condition: service_healthy

    networks:
      - nagare-network

    # Enable host network access for AI services
    extra_hosts:
      - "host.docker.internal:host-gateway"

    healthcheck:
      test: ["CMD", "node", "-e", "require('http').request('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).end()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    restart: unless-stopped

  # nginx Reverse Proxy with SSL
  nginx:
    image: nginx:alpine
    container_name: nagare-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # nginx configuration
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/api.nagare.local.conf:/etc/nginx/conf.d/api.nagare.local.conf:ro
      - ./nginx/admin.nagare.local.conf:/etc/nginx/conf.d/admin.nagare.local.conf:ro

      # SSL certificates
      - ./ssl/certs/nginx.crt:/etc/nginx/ssl/nginx.crt:ro
      - ./ssl/certs/nginx.key:/etc/nginx/ssl/nginx.key:ro

      # Admin portal static files (if built)
      - ./admin-portal/dist:/usr/share/nginx/html:ro

      # Logs
      - ./nginx/logs:/var/log/nginx

    depends_on:
      - backend

    networks:
      - nagare-network

    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  nagare-network:
    driver: bridge
