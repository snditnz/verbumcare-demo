version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: verbumcare-postgres
    environment:
      POSTGRES_DB: verbumcare_demo
      POSTGRES_USER: demo
      POSTGRES_PASSWORD: demo123
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/db/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
      - ./backend/src/db/seed.sql:/docker-entrypoint-initdb.d/2-seed.sql
    networks:
      - verbumcare-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U demo -d verbumcare_demo"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: verbumcare-backend
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgres://demo:demo123@postgres:5432/verbumcare_demo
      OPENAI_API_KEY: ${OPENAI_API_KEY:-your_openai_api_key_here}
      NODE_ENV: development
      CLIENT_URLS: http://localhost:5173,http://localhost:5174,http://localhost:19006
    volumes:
      - ./backend/uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - verbumcare-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').request('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).end()"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  verbumcare-network:
    driver: bridge